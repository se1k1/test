public class DebugOutputStorage {

	public DebugOutputStorage()
	{
		// DEBUG
				 for ( int i = 0; i < motionCompensation.length; i++ ) {
				 for ( int j = 0; j < motionCompensation[0].length; j++ ) {
				 System.out.print( motionCompensation[i][j][0] + " "
				 + motionCompensation[i][j][1] + ", "
				 + motionCompensation[i][j][2] + " | " );
				 }
				 System.out.println();
				 }
		
		
		// DEBUG
		 System.out.println( "x - bestMatch.getxTopLeft() = " + x
		 + "-" + bestMatch.getxTopLeft() + " = "
		 + ( x - bestMatch.getxTopLeft() ) );
		 store motion vector y
		
		// DEBUG
		 System.out.println(
		 "[inside if(x%macroblksize...)]y - bestMatch.getxTopLeft() = "
		 + y
		 + "-" + bestMatch.getyTopLeft() + " = "
		 + ( y - bestMatch.getyTopLeft() ) );
	}
	// DEBUG
	System.out.println( "original target img size: " + padTarget.getW() );
	System.out.println( "original target img size: " + targetImg.getW() );
	System.out.println( "macroBlkSize size: " + macroBlkSize );
	
			// DEBUG
		System.out.println( "motion compensation[][]:" );
		for ( int i = 0; i < motionCompensation.length; i++ ) {
			for ( int j = 0; j < motionCompensation[0].length; j++ ) {
				System.out.print( "[ " + motionCompensation[i][j][0] + ", "
						+ motionCompensation[i][j][1] + ", "
						+ motionCompensation[i][j][2] + " ] " );
			}
			System.out.println();
		}
}